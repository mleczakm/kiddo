# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Payment services
    App\Service\PaymentCodeManager:
        arguments:
#            $paymentCodeLifetime: '%env(int:PAYMENT_CODE_LIFETIME)%'

    App\Application\CommandHandler\:
        resource: '../src/Application/CommandHandler/'
        tags: ['messenger.message_handler']

    dunglas_doctrine_json_odm.serializer:
        class: Dunglas\DoctrineJsonOdm\Serializer
        arguments:
            - [ '@App\Infrastructure\Symfony\Serializer\MoneyNormalizer', '@?dunglas_doctrine_json_odm.normalizer.backed_enum', '@?dunglas_doctrine_json_odm.normalizer.uid', '@dunglas_doctrine_json_odm.normalizer.datetime', '@dunglas_doctrine_json_odm.normalizer.array', '@dunglas_doctrine_json_odm.normalizer.object' ]
            - [ '@serializer.encoder.json' ]
            - '@?dunglas_doctrine_json_odm.type_mapper'
        public: true
        autowire: false
        autoconfigure: false

    App\Infrastructure\Symfony\Scheduler:
        arguments:
            $scheduleProviders:
                - '@App\Infrastructure\Symfony\Scheduler\MainSchedule'

    App\Infrastructure\Swoole\Configurator\WithScheduler:
        tags:
            - 'swoole_bundle.server_configurator'

    DirectoryTree\ImapEngine\MailboxInterface:
        class: DirectoryTree\ImapEngine\Mailbox
        arguments:
            $config:
                port: 993
                ssl: true
                username: '%env(MAILBOX_USERNAME)%'
                password: '%env(MAILBOX_PASSWORD)%'
                host: '%env(MAILBOX_HOST)%'
        public: true

    logdash:
        class: Logdash\Logdash
        factory: [ 'Logdash\Logdash', 'create' ]
        arguments:
            - apiKey: '%env(LOGDASH_API_KEY)%'
              verbose: '%kernel.debug%'

    Logdash\Logger\Logger:
        factory: [ '@logdash', 'logger' ]
        public: true

    Symfony\Component\Cache\Psr16Cache:

    Psr\SimpleCache\CacheInterface:
        alias: Symfony\Component\Cache\Psr16Cache

    SymfonyHealthCheckBundle\Check\DoctrineORMCheck:
        alias: symfony_health_check.doctrine_check
        
    BGalati\MonologSentryHandler\SentryHandler:
    Sentry\Integration\RequestIntegration:
    Sentry\Integration\EnvironmentIntegration:
    Sentry\Integration\FrameContextifierIntegration:
    Sentry\Integration\RequestFetcherInterface:
        class: Sentry\Integration\RequestFetcher

    Symfony\Contracts\Service\ResetInterface:
        alias: services_resetter
