<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.github/workflows/qa.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.github/workflows/qa.yml" />
              <option name="updatedContent" value="name: QA Pipeline&#10;&#10;on:&#10;  pull_request:&#10;    branches: [ main, master, develop ]&#10;  push:&#10;    branches: [ main, master, develop ]&#10;&#10;jobs:&#10;  php-cs-fixer:&#10;    name: PHP CS Fixer&#10;    runs-on: ubuntu-latest&#10;    steps:&#10;      - uses: actions/checkout@v4&#10;      &#10;      - name: Setup PHP&#10;        uses: shivammathur/setup-php@v2&#10;        with:&#10;          php-version: 8.4&#10;          extensions: pdo, pdo_pgsql, intl&#10;          coverage: none&#10;          &#10;      - name: Cache Composer dependencies&#10;        uses: actions/cache@v3&#10;        with:&#10;          path: vendor&#10;          key: composer-${{ hashFiles('composer.lock') }}&#10;          restore-keys: composer-&#10;          &#10;      - name: Install dependencies&#10;        run: composer install --prefer-dist --no-progress --no-suggest&#10;        &#10;      - name: Run PHP CS Fixer (dry-run)&#10;        run: vendor/bin/ecs check --ansi&#10;&#10;  phpstan:&#10;    name: PHPStan Static Analysis&#10;    runs-on: ubuntu-latest&#10;    steps:&#10;      - uses: actions/checkout@v4&#10;      &#10;      - name: Setup PHP&#10;        uses: shivammathur/setup-php@v2&#10;        with:&#10;          php-version: 8.4&#10;          extensions: pdo, pdo_pgsql, intl&#10;          coverage: none&#10;          &#10;      - name: Cache Composer dependencies&#10;        uses: actions/cache@v3&#10;        with:&#10;          path: vendor&#10;          key: composer-${{ hashFiles('composer.lock') }}&#10;          restore-keys: composer-&#10;          &#10;      - name: Install dependencies&#10;        run: composer install --prefer-dist --no-progress --no-suggest&#10;        &#10;      - name: Run PHPStan&#10;        run: vendor/bin/phpstan analyse --ansi&#10;&#10;  tests:&#10;    name: Tests&#10;    runs-on: ubuntu-latest&#10;    &#10;    services:&#10;      postgres:&#10;        image: postgres:16&#10;        env:&#10;          POSTGRES_DB: app_test&#10;          POSTGRES_USER: app&#10;          POSTGRES_PASSWORD: password&#10;        options: &gt;-&#10;          --health-cmd pg_isready&#10;          --health-interval 10s&#10;          --health-timeout 5s&#10;          --health-retries 5&#10;        ports:&#10;          - 5432:5432&#10;          &#10;    env:&#10;      DATABASE_URL: postgresql://app:password@localhost:5432/app_test&#10;      APP_ENV: test&#10;      &#10;    steps:&#10;      - uses: actions/checkout@v4&#10;      &#10;      - name: Setup PHP&#10;        uses: shivammathur/setup-php@v2&#10;        with:&#10;          php-version: 8.4&#10;          extensions: pdo, pdo_pgsql, intl&#10;          coverage: pcov&#10;          &#10;      - name: Cache Composer dependencies&#10;        uses: actions/cache@v3&#10;        with:&#10;          path: vendor&#10;          key: composer-${{ hashFiles('composer.lock') }}&#10;          restore-keys: composer-&#10;          &#10;      - name: Install dependencies&#10;        run: composer install --prefer-dist --no-progress --no-suggest&#10;        &#10;      - name: Create test database&#10;        run: php bin/console doctrine:database:create --env=test --if-not-exists&#10;        &#10;      - name: Run migrations&#10;        run: php bin/console doctrine:migrations:migrate --env=test --no-interaction&#10;        &#10;      - name: Run unit tests&#10;        run: vendor/bin/phpunit --testsuite Unit&#10;        &#10;      - name: Run integration tests&#10;        run: vendor/bin/phpunit --testsuite Integration&#10;        &#10;      - name: Run functional tests&#10;        run: vendor/bin/phpunit --testsuite Functional&#10;&#10;  security-check:&#10;    name: Security Check&#10;    runs-on: ubuntu-latest&#10;    steps:&#10;      - uses: actions/checkout@v4&#10;      &#10;      - name: Setup PHP&#10;        uses: shivammathur/setup-php@v2&#10;        with:&#10;          php-version: 8.4&#10;          extensions: pdo, pdo_pgsql, intl&#10;          coverage: none&#10;          &#10;      - name: Cache Composer dependencies&#10;        uses: actions/cache@v3&#10;        with:&#10;          path: vendor&#10;          key: composer-${{ hashFiles('composer.lock') }}&#10;          restore-keys: composer-&#10;          &#10;      - name: Install dependencies&#10;        run: composer install --prefer-dist --no-progress --no-suggest&#10;        &#10;      - name: Check security vulnerabilities&#10;        run: composer audit&#10;&#10;  qa-complete:&#10;    name: QA Pipeline Complete&#10;    runs-on: ubuntu-latest&#10;    needs: [php-cs-fixer, phpstan, tests, security-check]&#10;    if: always()&#10;    steps:&#10;      - name: Check if all jobs passed&#10;        run: |&#10;          if [[ &quot;${{ needs.php-cs-fixer.result }}&quot; != &quot;success&quot; || \&#10;                &quot;${{ needs.phpstan.result }}&quot; != &quot;success&quot; || \&#10;                &quot;${{ needs.tests.result }}&quot; != &quot;success&quot; || \&#10;                &quot;${{ needs.security-check.result }}&quot; != &quot;success&quot; ]]; then&#10;            echo &quot;One or more QA jobs failed&quot;&#10;            exit 1&#10;          else&#10;            echo &quot;All QA jobs passed successfully&quot;&#10;          fi" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/config/packages/workflows.yaml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/config/packages/workflows.yaml" />
              <option name="originalContent" value="framework:&#10;    workflows:&#10;        booked_lesson:&#10;            type: 'state_machine'&#10;            supports:&#10;                - App\Entity\DTO\BookedLesson&#10;            places:&#10;                - booked&#10;                - rescheduled&#10;                - cancelled&#10;                - refund_requested&#10;                - refunded&#10;            transitions:&#10;                reschedule:&#10;                    from: booked&#10;                    to: rescheduled&#10;                cancel:&#10;                    from: [booked, rescheduled]&#10;                    to: cancelled&#10;                request_refund:&#10;                    from: cancelled&#10;                    to: refund_requested&#10;                refund:&#10;                    from: refund_requested&#10;                    to: refunded&#10;&#10;" />
              <option name="updatedContent" value="framework:&#10;    workflows:&#10;        booking:&#10;            type: 'state_machine'&#10;            supports:&#10;                - App\Entity\Booking&#10;            places:&#10;                - booked&#10;                - rescheduled&#10;                - cancelled&#10;                - refund_requested&#10;                - refunded&#10;            transitions:&#10;                reschedule:&#10;                    from: booked&#10;                    to: rescheduled&#10;                    guard: &quot;subject.canRescheduleMultipleTimes or subject.rescheduleCount == 0&quot;&#10;                cancel:&#10;                    from: [booked, rescheduled]&#10;                    to: cancelled&#10;                request_refund:&#10;                    from: cancelled&#10;                    to: refund_requested&#10;                refund:&#10;                    from: refund_requested&#10;                    to: refunded" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>