name: Production Build & Deploy

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push production image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .docker/php/Dockerfile
          target: prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache,mode=max
          build-args: |
            APP_VERSION=${{ github.ref_name }}
            APP_REVISION=${{ github.sha }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/projects/hosting
            IMAGE_REF="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
            
            # Update .env file with the new image reference
            echo "Updating .env file with new image reference..."
            if [ ! -f .env ]; then
              touch .env
            fi
            
            # Add or update KIDDO_IMAGE in .env
            if grep -q '^KIDDO_IMAGE=' .env; then
              sed -i "s|^KIDDO_IMAGE=.*|KIDDO_IMAGE=$IMAGE_REF|" .env
            else
              echo "KIDDO_IMAGE=$IMAGE_REF" >> .env
            fi
            
            # Pull the latest image
            echo "Pulling the latest Docker image..."
            echo "Using image reference: $IMAGE_REF"
            
            # Login to GitHub Container Registry if using ghcr.io
            if [[ $IMAGE_REF == ghcr.io/* ]]; then
              echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            fi
            
            docker compose pull kiddo 
            
            # Run the new container with the updated image
            echo "Starting new container..."
            docker compose up -d kiddo
            
            # Run database migrations
            echo "Running database migrations..."
            docker compose exec kiddo bin/console doctrine:schema:update --force --no-interaction
            
            echo "Deployment completed successfully!"
